{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"file",
				"fileName"
			],
			[
				"dele",
				"Delete"
			],
			[
				"delete",
				"deleteNote"
			],
			[
				"files",
				"filesUtil"
			],
			[
				"data",
				"dataPath"
			],
			[
				"js",
				"jsonFile"
			],
			[
				"events",
				"eventsController"
			],
			[
				"event",
				"eventsController"
			],
			[
				"se",
				"send"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "const fileUtils\t= require('./fileUtils'),\n\t  fs \t\t= require('fs'),\n\t  jsonFile\t= require('jsonFile'),\n\t  async \t= require('async'),\n\t  guid \t\t= require('guid');\n\nmodule.exports = {\n\tlistNotes: listNotes,\n\tsaveNote: saveNote,\n\tfindNote: findNote,\n\tdeleteNote: deleteNote\n}\n\nfunction listNotes(callback){\n\t\n\tfileUtils.checkDataDirectory((err) => {  \n\t\tif(err) {\n\t\t\tconsole.log(`Unable to access path: ${dataPath}`, err);\n\t\t\tthrow err;\n\t\t}\n\n\t\tfs.readdir(fileUtils.dataPath, (err, files) => {\n\t\t\tif (err) \n\t\t    \tconsole.log(`Unable to read directory: ${dataPath}`);\n\n\t\t    files = files.filter(function(file) { return file.substr(-5) === '.json' && file.substr(0, 5) === 'note_'; })\n\n\t\t    // Loop over each discovered file and map to a notes collection \n\t\t    async.map(\n\t\t\t    // collection to iterate\n\t\t\t    files, \n\n\t\t\t    // function to perform on each file\n\t\t\t    (file, transformedCallback) => {\n\t\t\t    \tloadNoteFromFileName(fileUtils.createFilePathFromFileName(file), (err, note) => {\n\t\t\t    \t\ttransformedCallback(err, note);\n\t\t\t    \t}) \n\t\t \t\t}, \n\n\t\t \t\t// Final Callback, calls the listNotes callback and returns the newly created notes collection\n\t\t \t\t(err, notes) => {\n\t\t \t\t\tcallback(err, notes);\n\t\t \t\t}\n\t\t \t);\n\t    });\n    });\n}\n\n/*\n* Save a note object to json file\n* @param note - the note object to save\n* @param callback - The callback that handles the response.\n*/\nfunction saveNote(note, callback){\n\tvar fileName = fileUtils.createFilePathFromGuid(note.guid);\n\tconsole.log(`Saving file to: ${fileName}`);\n\n\tjsonFile.writeFile(fileName, note, (err) => {\n\t  callback(err);\n\t});\n}\n\n\n/*\n* Delete a note from the file system \n* @param guid - the guid of the note to be deleted\n*/\nfunction deleteNote(guid, callback) {\n\t\n\tvar fileName = fileUtils.createFilePathFromGuid(guid);\n\n\tfs.unlink(fileName, (err) => {\n\t\tcallback(err);\n\t});\n}\n\n\n/*\n* Loads a note from the file system \n* @param string identifier - either a guid or a filename\n* @returns - The note object via the callback function\n*/\nfunction findNote(identifier, callback){\n\n\tvar fileName = identifier;\n\n\tif(guid.isGuid(identifier)){\n\t\tfileName = fileUtils.createFilePathFromGuid(identifier);\n\t}\n\n\tloadNoteFromFileName(fileName, callback)\n}\n\n/*\n* Loads a note from the file system \n* @param filename - the filename of the note to be loaded\n* @returns - The note object via the callback function\n*/\nfunction loadNoteFromFileName(fileName, callback){\n\t//console.log(`Loading file: ${fileName}`);\n\n\t// Ensure File exists first\n\tcheckFileExists(fileName, (err) => {\n\n\t\tif(err != null)\n\t\t\tcallback(err, null);\n\n\t\t//Read File\n\t\tjsonFile.readFile(fileName, (err, note) => {\n\t\t\tif (err)\n\t\t\t\tconsole.log(`Error whilst loading file: ${fileName}`);\n\n\t\t\tcallback(err, note);\n\t\t});\n\t});\n}\n\nfunction checkFileExists(fileName, callback){\n\tfs.access(fileName, (err) => {\n\t\tcallaback(err);\n\t});\n}",
			"file": "app/services/notes.repository.js",
			"file_size": 2967,
			"file_write_time": 131254272113497228,
			"settings":
			{
				"buffer_size": 2845,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/controllers/notes.controller.js",
			"settings":
			{
				"buffer_size": 3067,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "notes.controller.js"
			}
		},
		{
			"file": "app/routes.js",
			"settings":
			{
				"buffer_size": 725,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/pages/edit.ejs",
			"settings":
			{
				"buffer_size": 1457,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/layout.ejs",
			"settings":
			{
				"buffer_size": 976,
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/pages/create.ejs",
			"settings":
			{
				"buffer_size": 930,
				"line_ending": "Windows"
			}
		},
		{
			"file": "views/pages/notes.ejs",
			"settings":
			{
				"buffer_size": 1141,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/services/fileUtils.js",
			"settings":
			{
				"buffer_size": 1358,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "set",
		"selected_items":
		[
			[
				"set",
				"Set Syntax: HTML"
			],
			[
				"file ",
				"File: Rename"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Install Package Control"
			],
			[
				"syntax",
				"Set Syntax: JavaScript"
			],
			[
				"newfile",
				"File: New View into File"
			]
		],
		"width": 432.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Learning/Node/NotesApp",
		"/D/Learning/Node/NotesApp/app",
		"/D/Learning/Node/NotesApp/app/controllers",
		"/D/Learning/Node/NotesApp/app/services",
		"/D/Learning/Node/NotesApp/public",
		"/D/Learning/Node/NotesApp/public/css",
		"/D/Learning/Node/NotesApp/scripts",
		"/D/Learning/Node/NotesApp/views"
	],
	"file_history":
	[
		"/D/Learning/Node/NotesApp/scripts/edit.js",
		"/D/Learning/Node/NotesApp/app/routes.js",
		"/D/Learning/Node/NotesApp/.env",
		"/D/Learning/Node/NotesApp/public/css/styles.css",
		"/D/Learning/Node/NotesApp/app/controllers/main.controller.js",
		"/D/Learning/Node/NotesApp/views/layout.ejs",
		"/D/Learning/Node/NotesApp/server.js",
		"/D/Learning/Node/NotesApp/views/pages/single.ejs",
		"/D/Learning/Node/NotesApp/views/pages/notes.ejs",
		"/D/Learning/Node/NotesApp/views/pages/home.ejs",
		"/D/Learning/Node/NotesApp/views/pages/edit.ejs",
		"/D/Learning/Node/NotesApp/views/pages/create.ejs",
		"/D/Learning/Node/NotesApp/app/services/fileUtils.js",
		"/D/Learning/Node/NotesApp/node_modules/guid/guid.js",
		"/D/Learning/Node/NotesApp/.env.example",
		"/D/Learning/Node/OlympicEvents/public/css/styles.css",
		"/D/Learning/Node/OlympicEvents/server.js",
		"/D/Learning/Node/OlympicEvents/app/routes.js",
		"/D/Learning/Node/OlympicEvents/app/models/event.js",
		"/D/Learning/Node/OlympicEvents/views/layout.ejs",
		"/D/Learning/Node/OlympicEvents/views/pages/create.ejs",
		"/D/Learning/Node/OlympicEvents/views/pages/edit.ejs",
		"/D/Learning/Node/OlympicEvents/app/controllers/events.controller.js",
		"/D/Learning/Node/OlympicEvents/.env.example",
		"/D/Learning/Node/OlympicEvents/.env",
		"/D/Learning/Node/OlympicEvents/views/pages/events.ejs",
		"/D/Learning/Node/OlympicEvents/views/pages/single.ejs",
		"/D/Learning/Node/OlympicEvents/node_modules/express-validator/lib/express_validator.js",
		"/D/Learning/Node/OlympicEvents/.gitignore",
		"/D/Learning/Node/OlympicEvents/app/controllers/main.controller.js",
		"/D/Learning/Node/OlympicEvents/views/pages/home.ejs",
		"/D/Learning/Node/OlympicEvents/package.json",
		"/D/Learning/Node/OlympicEvents/servffer.js",
		"/D/Learning/Node/OlympicEvents/nkn.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"updateNo",
			"list(",
			"find",
			"createFileNameFromGuid",
			"createFileName",
			"tofile",
			"event",
			"Event"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"listNotes(",
			"createFilePathFromGuid",
			"createFileNameFromGuid",
			"note",
			"Note"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/services/notes.repository.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2845,
						"regions":
						{
						},
						"selection":
						[
							[
								2799,
								2799
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 994.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/controllers/notes.controller.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3067,
						"regions":
						{
						},
						"selection":
						[
							[
								1519,
								1519
							]
						],
						"settings":
						{
							"auto_name": "notes.controller.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 424.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/routes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 725,
						"regions":
						{
						},
						"selection":
						[
							[
								192,
								192
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "views/pages/edit.ejs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1457,
						"regions":
						{
						},
						"selection":
						[
							[
								1093,
								1093
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "views/layout.ejs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 976,
						"regions":
						{
						},
						"selection":
						[
							[
								851,
								851
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "views/pages/create.ejs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 930,
						"regions":
						{
						},
						"selection":
						[
							[
								427,
								752
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "views/pages/notes.ejs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1141,
						"regions":
						{
						},
						"selection":
						[
							[
								1121,
								1121
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app/services/fileUtils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1358,
						"regions":
						{
						},
						"selection":
						[
							[
								1094,
								1094
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "package.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 213.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
